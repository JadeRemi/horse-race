{
    "root": true,
    "env": { // https://eslint.org/docs/user-guide/configuring.html#specifying-environments
        "browser": true, // browser global variables
        "node": true, // Node.js global variables and Node.js-specific rules
        "mocha": true,
        "es6": true,
        "jest/globals": true,
        "es2021": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:@typescript-eslint/recommended"
    ],
    "overrides": [
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module",
        "ecmaFeatures": {
            "legacyDecorators": true,
            "arrowFunctions": true,
            "blockBindings": true,
            "classes": true,
            "defaultParams": true,
            "destructuring": true,
            "forOf": true,
            "generators": false,
            "modules": true,
            "objectLiteralComputedProperties": true,
            "objectLiteralDuplicateProperties": false,
            "objectLiteralShorthandMethods": true,
            "objectLiteralShorthandProperties": true,
            "spread": true,
            "superInFunctions": true,
            "templateStrings": true,
            "jsx": true
        }
    },
    "globals": {
        "Caman": true,
        "Promise": true
      },
    "plugins": [
        "react",
        "@typescript-eslint",
        "babel",
        "jest"
    ],
    "rules": {
        "no-dupe-class-members": 2,
        /**
         * Strict mode
         */
        // babel inserts "use strict"; for us
        "strict": [2, "never"], // https://eslint.org/docs/rules/strict
    
        /**
         * ES6
         */
        "no-var": 2, // https://eslint.org/docs/rules/no-var
        "prefer-const": 2, // https://eslint.org/docs/rules/prefer-const
    
        /**
         * Variables
         */
        "no-shadow": 2, // https://eslint.org/docs/rules/no-shadow
        "no-shadow-restricted-names": 2, // https://eslint.org/docs/rules/no-shadow-restricted-names
        "no-unused-vars": [2, { // https://eslint.org/docs/rules/no-unused-vars
          "vars": "local",
          "args": "after-used"
        }],
        "no-use-before-define": 0, // https://eslint.org/docs/rules/no-use-before-define
        "no-undef": 2, // https://eslint.org/docs/rules/no-undef
        /**
         * Possible errors
         */
        "comma-dangle": [2, // https://eslint.org/docs/rules/comma-dangle
          {
            "arrays": "always-multiline",
            "objects": "always-multiline",
            "imports": "always-multiline",
            "exports": "always-multiline",
            "functions": "only-multiline"
          }
        ],
        "no-cond-assign": [2, "always"], // https://eslint.org/docs/rules/no-cond-assign
        "no-console": 1, // https://eslint.org/docs/rules/no-console
        "no-debugger": 1, // https://eslint.org/docs/rules/no-debugger
        "no-alert": 1, // https://eslint.org/docs/rules/no-alert
        "no-constant-condition": 1, // https://eslint.org/docs/rules/no-constant-condition
        "no-dupe-keys": 2, // https://eslint.org/docs/rules/no-dupe-keys
        "no-duplicate-case": 2, // https://eslint.org/docs/rules/no-duplicate-case
        "no-empty": 2, // https://eslint.org/docs/rules/no-empty
        "no-ex-assign": 2, // https://eslint.org/docs/rules/no-ex-assign
        "no-extra-boolean-cast": 0, // https://eslint.org/docs/rules/no-extra-boolean-cast
        "no-extra-semi": 2, // https://eslint.org/docs/rules/no-extra-semi
        "no-func-assign": 2, // https://eslint.org/docs/rules/no-func-assign
        "no-inner-declarations": 2, // https://eslint.org/docs/rules/no-inner-declarations
        "no-invalid-regexp": 2, // https://eslint.org/docs/rules/no-invalid-regexp
        "no-irregular-whitespace": 2, // https://eslint.org/docs/rules/no-irregular-whitespace
        "no-obj-calls": 2, // https://eslint.org/docs/rules/no-obj-calls
        "quote-props": [2, "as-needed"], // https://eslint.org/docs/rules/quote-props
        "no-sparse-arrays": 2, // https://eslint.org/docs/rules/no-sparse-arrays
        "no-unreachable": 2, // https://eslint.org/docs/rules/no-unreachable
        "use-isnan": 2, // https://eslint.org/docs/rules/use-isnan
        "block-scoped-var": 2, // https://eslint.org/docs/rules/block-scoped-var
    
        /**
         * Best practices
         */
        "consistent-return": 2, // https://eslint.org/docs/rules/consistent-return
        "curly": [2, "multi-line"], // https://eslint.org/docs/rules/curly
        "default-case": 2, // https://eslint.org/docs/rules/default-case
        "dot-notation": [2, { // https://eslint.org/docs/rules/dot-notation
          "allowKeywords": true
        }],
        "eqeqeq": 2, // https://eslint.org/docs/rules/eqeqeq
        "guard-for-in": 2, // https://eslint.org/docs/rules/guard-for-in
        "no-caller": 2, // https://eslint.org/docs/rules/no-caller
        "no-eq-null": 2, // https://eslint.org/docs/rules/no-eq-null
        "no-eval": 2, // https://eslint.org/docs/rules/no-eval
        "no-extend-native": 2, // https://eslint.org/docs/rules/no-extend-native
        "no-extra-bind": 2, // https://eslint.org/docs/rules/no-extra-bind
        "no-fallthrough": 2, // https://eslint.org/docs/rules/no-fallthrough
        "no-floating-decimal": 2, // https://eslint.org/docs/rules/no-floating-decimal
        "no-implied-eval": 2, // https://eslint.org/docs/rules/no-implied-eval
        "no-lone-blocks": 2, // https://eslint.org/docs/rules/no-lone-blocks
        "no-multi-str": 2, // https://eslint.org/docs/rules/no-multi-str
        "no-native-reassign": 2, // https://eslint.org/docs/rules/no-native-reassign
        "no-new": 2, // https://eslint.org/docs/rules/no-new
        "no-new-func": 2, // https://eslint.org/docs/rules/no-new-func
        "no-new-wrappers": 2, // https://eslint.org/docs/rules/no-new-wrappers
        "no-octal": 2, // https://eslint.org/docs/rules/no-octal
        "no-octal-escape": 2, // https://eslint.org/docs/rules/no-octal-escape
        "no-param-reassign": 2, // https://eslint.org/docs/rules/no-param-reassign
        "no-proto": 2, // https://eslint.org/docs/rules/no-proto
        "no-redeclare": 2, // https://eslint.org/docs/rules/no-redeclare
        "no-return-assign": 2, // https://eslint.org/docs/rules/no-return-assign
        "no-script-url": 2, // https://eslint.org/docs/rules/no-script-url
        "no-self-compare": 2, // https://eslint.org/docs/rules/no-self-compare
        "no-sequences": 2, // https://eslint.org/docs/rules/no-sequences
        "no-throw-literal": 2, // https://eslint.org/docs/rules/no-throw-literal
        "no-with": 2, // https://eslint.org/docs/rules/no-with
        "radix": 2, // https://eslint.org/docs/rules/radix
        "vars-on-top": 2, // https://eslint.org/docs/rules/vars-on-top
        "wrap-iife": [2, "any"], // https://eslint.org/docs/rules/wrap-iife
        "yoda": 2, // https://eslint.org/docs/rules/yoda
    
        /**
         * Style
         */
        "indent": ["error", "tab"],
        "template-curly-spacing": "off",
        "brace-style": [2, // https://eslint.org/docs/rules/brace-style
          "1tbs", {
            "allowSingleLine": true
          }
        ],
        "quotes": [
          2, "single", // https://eslint.org/docs/rules/quotes
          {
            "allowTemplateLiterals": true
          }
        ],
        "camelcase": [1, { // https://eslint.org/docs/rules/camelcase
          "properties": "never"
        }],
        "comma-spacing": [2, { // https://eslint.org/docs/rules/comma-spacing
          "before": false,
          "after": true
        }],
        "comma-style": [2, "last"], // https://eslint.org/docs/rules/comma-style
        "eol-last": 2, // https://eslint.org/docs/rules/eol-last
        "func-names": 1, // https://eslint.org/docs/rules/func-names
        "key-spacing": [2, { // https://eslint.org/docs/rules/key-spacing
          "beforeColon": false,
          "afterColon": true
        }],
        "no-multiple-empty-lines": [2, { // https://eslint.org/docs/rules/no-multiple-empty-lines
          "max": 1
        }],
        "no-nested-ternary": 0, // https://eslint.org/docs/rules/no-nested-ternary
        "no-new-object": 2, // https://eslint.org/docs/rules/no-new-object
        "no-spaced-func": 2, // https://eslint.org/docs/rules/no-spaced-func
        "no-trailing-spaces": 2, // https://eslint.org/docs/rules/no-trailing-spaces
        "no-underscore-dangle": 0, // https://eslint.org/docs/rules/no-underscore-dangle
        "one-var": [2, "never"], // https://eslint.org/docs/rules/one-var
        "padded-blocks": [2, "never"], // https://eslint.org/docs/rules/padded-blocks
        "semi": [2, "always"], // https://eslint.org/docs/rules/semi
        "semi-spacing": [2, { // https://eslint.org/docs/rules/semi-spacing
          "before": false,
          "after": true
        }],
        "keyword-spacing": 2, // https://eslint.org/docs/rules/keyword-spacing
        "space-before-blocks": 2, // https://eslint.org/docs/rules/space-before-blocks
        "space-before-function-paren": [2, { // https://eslint.org/docs/rules/space-before-function-paren
          "anonymous": "always",
          "named": "never",
          "asyncArrow": "always"
        }],
        "space-infix-ops": 2, // https://eslint.org/docs/rules/space-infix-ops
        "spaced-comment": [2, "always"], // https://eslint.org/docs/rules/spaced-comment
        "object-curly-spacing": [2, "always", { // https://eslint.org/docs/rules/object-curly-spacing
          "objectsInObjects": false
        }],
    
        /**
         * JSX style
         */
        "react/display-name": 0, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/display-name.md
        "react/jsx-boolean-value": [2, "always"], // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-boolean-value.md
        "jsx-quotes": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-quotes.md
        "react/jsx-no-undef": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-undef.md
        "react/jsx-sort-props": 0, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-sort-props.md
        "react/jsx-sort-prop-types": 0, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-sort-prop-types.md
        "react/jsx-uses-react": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-uses-react.md
        "react/jsx-uses-vars": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-uses-vars.md
        "react/no-did-mount-set-state": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-did-mount-set-state.md
        "react/no-did-update-set-state": 0, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-did-update-set-state.md
        "react/no-unknown-property": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-unknown-property.md
        "react/prop-types": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/prop-types.md
        "react/react-in-jsx-scope": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/react-in-jsx-scope.md
        "react/self-closing-comp": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/self-closing-comp.md
        "react/jsx-wrap-multilines": [2, { // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-wrap-multilines.md
          "declaration": "parens-new-line",
          "assignment": "parens-new-line",
          "return": "parens-new-line",
          "arrow": "parens-new-line",
          "condition": "ignore",
          "logical": "ignore",
          "prop": "ignore"
        }],
        "react/jsx-fragments": [2, "syntax"], // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-fragments.md
        "react/jsx-no-useless-fragment": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-useless-fragment.md
        "react/jsx-equals-spacing": [2, "never"], // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-equals-spacing.md
        "react/jsx-first-prop-new-line": [2, "multiline"], // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-first-prop-new-line.md
        "react/jsx-tag-spacing": [2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-tag-spacing.md
          {
            "closingSlash": "never",
            "beforeSelfClosing": "always",
            "afterOpening": "never",
            "beforeClosing": "never"
          }
        ],
        "react/jsx-closing-bracket-location": [2, "tag-aligned"], // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-closing-bracket-location.md
        "react/jsx-closing-tag-location": 2, // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-closing-tag-location.md
        "react/jsx-curly-brace-presence": [2, { // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-curly-brace-presence.md
          "props": "never",
          "children": "never"
        }],
        "react/jsx-curly-spacing": [2, { // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-curly-spacing.md
          "when": "never",
          "children": {
            "when": "never"
          },
          "attributes": {
            "allowMultiline": false,
            "objectLiterals": "never"
          }
        }],
        "react/sort-comp": [2, { // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/sort-comp.md
          "order": [
            "displayName",
            "propTypes",
            "contextType",
            "childContextTypes",
            "mixins",
            "statics",
            "defaultProps",
            "constructor",
            "state",
            "getDefaultProps",
            "getInitialState",
            "getChildContext",
            "UNSAFE_componentWillMount",
            "componentWillMount",
            "componentDidMount",
            "componentWillReceiveProps",
            "UNSAFE_componentWillReceiveProps",
            "shouldComponentUpdate",
            "componentWillUpdate",
            "UNSAFE_componentWillUpdate",
            "componentDidUpdate",
            "componentWillUnmount",
            "/^on.+$/",
            "/^get.+$/",
            "/^render.+$/",
            "render"
          ]
        }]
    },
    "settings": {
        "react": {
          "pragma": "React",
          "version": "detect"
        }
    }
}
